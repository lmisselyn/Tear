fun main (args: String) {
    tear {
        man("Thomas").
        man("Lambert").
        man("Paul").
        man("Vincent").
        man("Jean").
        father("Paul", "Harry").
        father("Pierre", "Louis").

        child("Lambert", "Vincent").
        child("Harry", "Jean").
        child("Louise", "Edward").

        not_girl("Edward").

        man(Z) := not_girl(Z).
        father(P, C) := child(C, P) AND man(P).
    }

    var test1: Bool = query(woman("Paul"))
    if (test1)
        print("woman(Paul) -> True")
    else
        print("woman(Paul) -> False")
    print("=================")

    var test2: Bool = query(man("Paul"))
    if (test2)
        print("man(Paul) -> True")
    else
        print("man(Paul) -> False")
    print("=============")

    var test3: Bool = query(man("Charles"))
    if (test3)
        print("man(Charles) -> True")
    else
        print("man(Charles) -> False")
    print("=============")

    var X: String[] = []
    var test4: Bool = query(man(X))
    if (test4)
        print("man(X) -> True")
    else
        print("man(X) -> False")
    array_print(X)
    print("================")

    var X: String[] = []
    var Y: String[] = []
    var test5: Bool = query(father(X, Y))
    if (test5)
        print("father(X, Y) -> True")
    else
        print("father(X, Y) -> False")
    print("X:")
    array_print(X)
    print("Y:")
    array_print(Y)
    print("=================")

    var X: String[] = []
    var test6: Bool = query(father(X, "Harry"))
    if (test6)
        print("father(X, Harry) -> True")
    else
        print("father(X, Harry) -> False")
    print("X:")
    array_print(X)
}

fun array_print (a: String[]): Int
{
    if (a.length == 0) print("[]")
    var i: Int = 0
    while i < a.length {
        print(a[i])
        i = i + 1
    }
    return 0
}

main("")